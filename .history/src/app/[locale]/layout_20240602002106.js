import Footer from "./components/footer/footer";
import Header from "./components/header/Header";

import {NextIntlClientProvider} from 'next-intl';
import {getMessages} from 'next-intl/server';
import {unstable_setRequestLocale} from 'next-intl/server';

import "./globals.css";


export const metadata = {
  title: "Create Next App",
  description: "Generated by create next "
};
const locales = ['az', 'ru'];

export async function getStaticPaths() {
  const paths = locales.map((locale) => ({ params: { locale } }));
  return {
    paths,
    fallback: false
  };
}

export async function getStaticProps({ params }) {
  const { locale } = params;
  // Здесь вы можете получить данные для каждой версии языка на основе переданного параметра locale
  // Например, вы можете получить переводы для указанного языка и передать их в качестве props
  const translations = await fetchTranslationsForLocale(locale);

  return {
    props: {
      translations
    }
  };
}

// Функция для получения переводов для указанного языка
async function fetchTranslationsForLocale(locale) {
  // Здесь должна быть логика для получения переводов
  // Например, загрузка переводов из файлов или запрос к API
  // Верните объект с переводами для указанного языка
}



export default async  function RootLayout({ children,
  params: {locale} }) {
    const messages = await getMessages();
    unstable_setRequestLocale(locale);

  return (
    <html lang={locale}>
      <body>
      <NextIntlClientProvider messages={messages}>

          <Header  />
          <main>
            {children}
          </main>
          <Footer />
          </NextIntlClientProvider>
      </body>
    </html>
  );
}
